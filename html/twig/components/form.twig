{#
/**
 * @input
 * Default implementation:
 * {{ form.input('text', 'input-name', 'input label', 'input-class', attrs, datas) }}
 *
 * Available variables:
 * - type: field type (text, password, file)
 * - name: field name and id
 * - label: field label
 * - class: field class
 * - attrs: field optionnal attributes like placeholder, required, checked, disabled, readonly...
 *   {% set attrs = {
 *       'required' : 'required',               => required="required"
 *       'placeholder'  : 'field placeholder'   => placeholder="field placeholder"
 *   } %}
 * - datas: field datas attributes managing error messages, see example below
 *   {% set datas = {
 *       'error-required' : 'champ obligatoire',    => data-error-required="champ obligatoire"
 *       'error-email'    : 'email invalide'        => data-error-email="email invalide"
 *   } %}
 */
#}
{% macro input(type, name, label, class, attrs, datas) %}
    <div class="form-item form-item-input form-item-{{ type }}">
        <label for="{{ name }}" class="form-label">
            {{ label|raw }}
            {% if(attrs.required) %}<sup>*</sup>{% endif %}
        </label>
        <input type="{{ type }}" name="{{ name }}" id="{{ name }}" class="form-input form-{{ type }} {{ class }}"
        {% for attrName, attrValue in attrs %}
            {{ attrName }}="{{ attrValue }}"
        {% endfor %}
        {% for dataName, dataText in datas %}
            data-{{ dataName }}="{{ dataText }}"
        {% endfor %}
        />
        <span class="js-form-label-error form-label-error"></span>
    </div>
{% endmacro %}


{#
/**
 * @checkbox
 * Default implementation:
 * {{ form.checkbox('checkbox-name', 'checkbox label', 'checkbox-class', attrs, datas) }}
 *
 * Available variables:
 * - name: field name and id
 * - label: field label
 * - class: field class
 * - attrs: field optionnal attributes like placeholder, required, checked, disabled, readonly...
 *   {% set attrs = {
 *       'required' : 'required',               => required="required"
 *       'placeholder'  : 'field placeholder'   => placeholder="field placeholder"
 *   } %}
 * - datas: field datas attributes managing error messages, see example below
 *   {% set datas = {
 *       'error-required' : 'champ obligatoire'    => data-error-required="champ obligatoire"
 *   } %}
 */
#}
{% macro checkbox(name, label, class, attrs, datas) %}
    <div class="form-item form-item-checkbox">
        <input type="checkbox" name="{{ name }}" id="{{ name }}" class="form-checkbox {{ class }}"
        {% for attrName, attrValue in attrs %}
            {{ attrName }}="{{ attrValue }}"
        {% endfor %}
        {% for dataName, dataText in datas %}
            data-{{ dataName }}="{{ dataText }}"
        {% endfor %}
        />
        <label for="{{ name }}" class="form-label">
            {{ label|raw }}
            {% if(attrs.required) %}<sup>*</sup>{% endif %}
        </label>
        <span class="js-form-label-error form-label-error"></span>
    </div>
{% endmacro %}


{#
/**
 * @radio
 * Default implementation:
 * {{ form.radio('radio-name', 'radio-id', 'radio label', 'radio-class', attrs, datas) }}
 *
 * Available variables:
 * - name: field name
 * - id: field id
 * - label: field label
 * - class: field class
 * - attrs: field optionnal attributes like placeholder, required, checked, disabled, readonly...
 *   {% set attrs = {
 *       'required' : 'required',               => required="required"
 *       'placeholder'  : 'field placeholder'   => placeholder="field placeholder"
 *   } %}
 * - datas: field datas attributes managing error messages, see example below
 *   {% set datas = {
 *       'error-required' : 'champ obligatoire'    => data-error-required="champ obligatoire"
 *   } %}
 */
#}
{% macro radio(name, id, label, class, attrs, datas) %}
    <div class="form-item form-item-radio">
        <input type="radio" name="{{ name }}" id="{{ id }}" class="form-radio {{ class }}"
        {% for attrName, attrValue in attrs %}
            {{ attrName }}="{{ attrValue }}"
        {% endfor %}
        {% for dataName, dataText in datas %}
            data-{{ dataName }}="{{ dataText }}"
        {% endfor %}
        />
        <label for="{{ id }}" class="form-label">
            {{ label|raw }}
        </label>
    </div>
{% endmacro %}


{#
/**
 * @select
 * Default implementation:
 * {{ form.select('select-name', 'select label', options, 'select-class', attrs, datas) }}
 *
 * Available variables:
 * - name: field name and id
 * - label: field label
 * - options: list of the select options with optgroup management, see sample below
 *   {% set options = {
 *       '': 'select an option',                => <option value="">select an option</option>
 *       1 : 'option 1',                        => <option value="1">option 1</option>
 *       'optgroup 1': {                        => <optgroup label="optgroup 1">
 *           '1.1' : 'optgroup 1 > option 1',       => <option value="1.1">optgroup 1 > option 1</option>
 *           '1.2' : 'optgroup 1 > option 2',       => <option value="1.2">optgroup 1 > option 2</option>
 *           '1.3' : 'optgroup 1 > option 3'        => <option value="1.3">optgroup 1 > option 3</option>
 *       },                                     => </optgroup>
 *       2 : 'option 2',                        => <option value="2">option 2</option>
 *       3 : 'option 3'                         => <option value="3">option 3</option>
 *   } %}
 * - class: field class
 * - attrs: field optionnal attributes like placeholder, required, checked, disabled, readonly...
 *   {% set attrs = {
 *       'required' : 'required',               => required="required"
 *       'placeholder'  : 'field placeholder'   => placeholder="field placeholder"
 *   } %}
 * - datas: field datas attributes managing error messages, see example below
 *   {% set datas = {
 *       'error-required' : 'champ obligatoire'    => data-error-required="champ obligatoire"
 *   } %}
 */
#}
{% macro select(name, label, options, class, attrs, datas) %}
    <div class="form-item form-item-select">
        <label for="{{ name }}" class="form-label">
            {{ label|raw }}
            {% if(attrs.required) %}<sup>*</sup>{% endif %}
        </label>
        <select name="{{ name }}" id="{{ name }}" class="form-select {{ class }}"
        {% for attrName, attrValue in attrs %}
            {{ attrName }}="{{ attrValue }}"
        {% endfor %}
        {% for dataName, dataText in datas %}
            data-{{ dataName }}="{{ dataText }}"
        {% endfor %}
        >
            {% for value, option in options %}
                {% if option is iterable %}
                    <optgroup label="{{ value }}">
                        {% for key, label in option %}
                            <option value="{{ key }}">{{ label }}</option>
                        {% endfor %}
                    </optgroup>
                {% else %}
                    <option value="{{ value }}">{{ option }}</option>
                {% endif %}
            {% endfor %}
        </select>
        <span class="js-form-label-error form-label-error"></span>
    </div>
{% endmacro %}


{#
/**
 * @textarea
 * Default implementation:
 * {{ form.textarea('textarea-name', 'textarea label', 'textarea-class', attrs, datas) }}
 *
 * Available variables:
 * - name: field name and id
 * - label: field label
 * - class: field class
 * - attrs: field optionnal attributes like placeholder, required, checked, disabled, readonly...
 *   {% set attrs = {
 *       'required' : 'required',               => required="required"
 *       'placeholder'  : 'field placeholder'   => placeholder="field placeholder"
 *   } %}
 * - datas: field datas attributes managing error messages, see example below
 *   {% set datas = {
 *       'error-required' : 'champ obligatoire'    => data-error-required="champ obligatoire"
 *   } %}
 */
#}
{% macro textarea(name, label, class, attrs, datas) %}
    <div class="form-item form-item-textarea">
        <label for="{{ name }}" class="form-label">
            {{ label|raw }}
            {% if(attrs.required) %}<sup>*</sup>{% endif %}
        </label>
        <textarea name="{{ name }}" id="{{ name }}" class="form-textarea {{ class }}"
        {% for attrName, attrValue in attrs %}
            {{ attrName }}="{{ attrValue }}"
        {% endfor %}
        {% for dataName, dataText in datas %}
            data-{{ dataName }}="{{ dataText }}"
        {% endfor %}
        ></textarea>
        <span class="js-form-label-error form-label-error"></span>
    </div>
{% endmacro %}


{#
/**
 * @button
 * Default implementation:
 * {{ form.button('button', 'button text', 'button-class') }}
 *
 * Available variables:
 * - type: button type (submit, reset, button)
 * - label: button text
 * - class: button class
 */
#}
{% macro button(type, label, class) %}
    <div class="form-item form-item-button form-item-{{ type }}">
        <button type="{{ type }}" class="form-button form-{{ type }} {{ class }}">{{ label|raw }}</button>
    </div>
{% endmacro %}